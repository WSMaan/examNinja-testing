import io.restassured.RestAssured;
import org.testng.Assert;
import org.testng.annotations.Test;

public class SampleDemo {

    @Test
    public void testHomepageStatus() {
        RestAssured
                .given()
                .when()
                .get("https://www.bbc.com")
                .then()
                .assertThat()
                .statusCode(200);
    }

    @Test
    public void testHomepageContentType() {
        String contentType = RestAssured
                .given()
                .when()
                .get("https://www.bbc.com")
                .then()
                .extract()
                .contentType();

        // Check if content type starts with text/html
        Assert.assertTrue(contentType.startsWith("text/html"),
                "Content type is not HTML. Expected: text/html, Actual: " + contentType);
        System.out.println("the test passed");
    }

    @Test
    public void testHomepageLinks() {
        String homepage = RestAssured
                .given()
                .when()
                .get("https://www.bbc.com")
                .then()
                .extract()
                .body()
                .asString();

        // Check if "News" link is present
        Assert.assertTrue(homepage.contains("News"),
                "Link to News is missing");
    }

    @Test
    public void testHomepageTitle() {
        String title = RestAssured
                .given()
                .when()
                .get("https://www.bbc.com")
                .then()
                .extract()
                .htmlPath()
                .getString("html.head.title");

        // Update this expected title as per the current title of    the BBC homepage
        Assert.assertEquals(title, "BBC Home - Breaking News, World News, US News, Sports, Business, Innovation, Climate, Culture, Travel, Video & Audio", "Homepage title is not as expected");
    }
}
